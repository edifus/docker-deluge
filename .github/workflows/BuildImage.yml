name: Build Image

on: [push, pull_request, workflow_dispatch]

env:
  USER: "edifus" #don't modify
  REPO: "deluge" #replace

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3

      - name: Build image
        run: |
          # Set version
          DOTNET_JSON="$(curl --retry 5 -sX GET https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json)"
          DOTNET_VERSIONS="$(echo $DOTNET_JSON | jq -r '."releases-index"[] | select(."support-phase"=="lts" or ."support-phase"=="current") | ."latest-sdk"' | tr '\n' ' ' | head -c -1)"
          DOTNET_TAG="$(echo $DOTNET_VERSIONS | tr ' ' '_')"
          echo "DOTNET_TAG=${DOTNET_TAG}" >> $GITHUB_ENV
          # Build image
          docker build --no-cache --build-arg DOTNET_VERSIONS="${DOTNET_VERSIONS}" -t ${{ github.sha }} .
      - name: Tag image
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) }}
        run: |
          docker tag ${{ github.sha }} ${USER}/${REPO}
          docker tag ${{ github.sha }} ${USER}/${REPO}-${{ env.DOTNET_TAG }}
          docker tag ${{ github.sha }} ${USER}/${REPO}-${{ env.DOTNET_TAG }}-${{ github.sha }}
          docker tag ${{ github.sha }} ${USER}/${REPO}-${{ github.sha }}
          docker tag ${{ github.sha }} ghcr.io/${USER}/${REPO}
          docker tag ${{ github.sha }} ghcr.io/${USER}/${REPO}-${{ env.DOTNET_TAG }}
          docker tag ${{ github.sha }} ghcr.io/${USER}/${REPO}-${{ env.DOTNET_TAG }}-${{ github.sha }}
          docker tag ${{ github.sha }} ghcr.io/${USER}/${REPO}-${{ github.sha }}
      - name: Credential check
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) }}
        run: |
          echo "CR_USER=${{ secrets.CR_USER }}" >> $GITHUB_ENV
          echo "CR_PAT=${{ secrets.CR_PAT }}" >> $GITHUB_ENV
          echo "DOCKERUSER=${{ secrets.DOCKERUSER }}" >> $GITHUB_ENV
          echo "DOCKERPASS=${{ secrets.DOCKERPASS }}" >> $GITHUB_ENV
          if [[ "${{ secrets.CR_USER }}" == "" && "${{ secrets.CR_PAT }}" == "" && "${{ secrets.DOCKERUSER }}" == "" && "${{ secrets.DOCKERPASS }}" == "" ]]; then
            echo "::error::Push credential secrets missing."
            echo "::error::You must set either CR_USER & CR_PAT or DOCKERUSER & DOCKERPASS as secrets in your repo settings."
            echo "::error::See https://github.com/linuxserver/docker-mods/blob/master/README.md for more information/instructions."
            exit 1
          fi
      - name: Login to GitHub Container Registry
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) && env.CR_USER && env.CR_PAT }}
        run: |
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ secrets.CR_USER }} --password-stdin
      - name: Push tags to GitHub Container Registry
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) && env.CR_USER && env.CR_PAT }}
        run: |
          docker push ghcr.io/${USER}/${REPO}
      - name: Login to DockerHub
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) && env.DOCKERUSER && env.DOCKERPASS }}
        run: |
          echo ${{ secrets.DOCKERPASS }} | docker login -u ${{ secrets.DOCKERUSER }} --password-stdin
      - name: Push tags to DockerHub
        if: ${{ github.ref == format('refs/heads/{0}-{1}', env.REPO, env.MODNAME) && env.DOCKERUSER && env.DOCKERPASS }}
        run: |
          docker push ${USER}/${REPO}